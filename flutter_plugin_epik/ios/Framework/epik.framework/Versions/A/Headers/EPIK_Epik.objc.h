// Objective-C API for talking to github.com/EpiK-Protocol/epik-wallet-golib/epik Go package.
//   gobind -lang=objc -prefix="EPIK_" github.com/EpiK-Protocol/epik-wallet-golib/epik
//
// File is generated by gobind. Do not edit.

#ifndef __EPIK_Epik_H__
#define __EPIK_Epik_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class EPIK_EpikEPKMessage;
@class EPIK_EpikPrivateKey;
@class EPIK_EpikWallet;

/**
 * EPKMessage ...
 */
@interface EPIK_EpikEPKMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t version;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull value;
@property (nonatomic) int64_t nonce;
@property (nonatomic) int64_t gasLimit;
@property (nonatomic) NSString* _Nonnull gasPrice;
@property (nonatomic) NSString* _Nonnull method;
@property (nonatomic) NSData* _Nullable params;
@end

/**
 * PrivateKey ...
 */
@interface EPIK_EpikPrivateKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull keyType;
@property (nonatomic) NSString* _Nonnull privateKey;
@end

/**
 * Wallet wallet
 */
@interface EPIK_EpikWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewWallet ...
 */
- (nullable instancetype)init;
// skipped method Wallet.AddrList with unsupported parameter or return types

/**
 * Balance ...
 */
- (NSString* _Nonnull)balance:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)coinbaseInfo:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)coinbaseWithdraw:(NSError* _Nullable* _Nullable)error;
/**
 * CreateExpert 创建领域专家
 */
- (NSString* _Nonnull)createExpert:(NSString* _Nullable)applicationHash error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)createSendMessage:(NSString* _Nullable)to amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
/**
 * ExpertInfo 专家信息
 */
- (NSString* _Nonnull)expertInfo:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
/**
 * ExpertList ...
 */
- (NSString* _Nonnull)expertList:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)expertNominate:(NSString* _Nullable)p0 target:(NSString* _Nullable)target error:(NSError* _Nullable* _Nullable)error;
/**
 * Export ...
 */
- (NSString* _Nonnull)export:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)gasEstimateGasLimit:(NSString* _Nullable)actor error:(NSError* _Nullable* _Nullable)error;
/**
 * GenerateKey t:bls,secp256k1
 */
- (NSString* _Nonnull)generateKey:(NSString* _Nullable)t seed:(NSData* _Nullable)seed path:(NSString* _Nullable)path error:(NSError* _Nullable* _Nullable)error;
/**
 * HasAddr ...
 */
- (BOOL)hasAddr:(NSString* _Nullable)addr;
/**
 * Import ...
 */
- (NSString* _Nonnull)import:(NSString* _Nullable)privateKey error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)messageCID:(NSString* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
/**
 * MessageReceipt ...
 */
- (NSString* _Nonnull)messageReceipt:(NSString* _Nullable)cidStr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)minerInfo:(NSString* _Nullable)minerID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)minerPledgeAdd:(NSString* _Nullable)toMinerID amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)minerPledgeApplyWithdraw:(NSString* _Nullable)minerID error:(NSError* _Nullable* _Nullable)error;
- (BOOL)minerPledgeApplyWithdrawOneClick:(NSString* _Nullable)minerStr error:(NSError* _Nullable* _Nullable)error;
- (BOOL)minerPledgeOneClick:(NSString* _Nullable)minerStr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)minerPledgeTransfer:(NSString* _Nullable)fromMinerID toMinerID:(NSString* _Nullable)toMinerID amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)minerPledgeWithdraw:(NSString* _Nullable)toMinerID amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (BOOL)minerPledgeWithdrawOneClick:(NSString* _Nullable)minerStr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeAdd:(NSString* _Nullable)target miner:(NSString* _Nullable)miner amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeApplyWithdraw:(NSString* _Nullable)target amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeBind:(NSString* _Nullable)miner amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeState:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeUnBind:(NSString* _Nullable)miner amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)retrievePledgeWithdraw:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
/**
 * Send ...
 */
- (NSString* _Nonnull)send:(NSString* _Nullable)to amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)sendRawMessage:(NSString* _Nullable)message signature:(NSData* _Nullable)signature error:(NSError* _Nullable* _Nullable)error;
/**
 * SetDefault ...
 */
- (BOOL)setDefault:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
/**
 * SetRPC ...
 */
- (BOOL)setRPC:(NSString* _Nullable)url token:(NSString* _Nullable)token error:(NSError* _Nullable* _Nullable)error;
/**
 * Sign ...
 */
- (NSData* _Nullable)sign:(NSString* _Nullable)addr hash:(NSData* _Nullable)hash error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signAndSendMessage:(NSString* _Nullable)addr message:(NSString* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)signCID:(NSString* _Nullable)addr cidStr:(NSString* _Nullable)cidStr error:(NSError* _Nullable* _Nullable)error;
/**
 * VoteRescind 撤销
 */
- (NSString* _Nonnull)voteRescind:(NSString* _Nullable)candidate amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
/**
 * VoteSend 投票
 */
- (NSString* _Nonnull)voteSend:(NSString* _Nullable)candidate amount:(NSString* _Nullable)amount error:(NSError* _Nullable* _Nullable)error;
/**
 * VoteWithdraw 提现
 */
- (NSString* _Nonnull)voteWithdraw:(NSString* _Nullable)to error:(NSError* _Nullable* _Nullable)error;
/**
 * VoterInfo 投票信息
 */
- (NSString* _Nonnull)voterInfo:(NSString* _Nullable)addr error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * NewWallet ...
 */
FOUNDATION_EXPORT EPIK_EpikWallet* _Nullable EPIK_EpikNewWallet(NSError* _Nullable* _Nullable error);

#endif
